(if (= (def? include.base) 0) (

	(let include.base (1))

	(let zero? (= (%%) 0))
	(let one? (= (%%) 1))
	(let false? (zero? (%%)))
	(let true? (one? (%%)))

	(let or
		(bit-or (each or.i (%%) (true? (or.i)))))

	(let and
		(true? (%%)))

	(let not
		(each not.i (%%) (zero? (not.i))))

	(let inc
		(each inc.i (%%) (+ (inc.i) 1)))

	(let dec
		(each dec.i (%%) (- (dec.i) 1)))

	(let /=
		(not (= (%%))))

	(let >=
		(not (< (%%))))

	(let <=
		(not (> (%%))))

))
