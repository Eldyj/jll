(if (= (def? include.math) 0) (
	(let include.math 1)

	(include std/base)

	(let factorial
		(if (zero? (% 0))
				1
				(* (% 0)
					 (factorial (dec (% 0))))))

	(let triangular
		(if (zero? (% 0))
				0
				(+ (% 0)
					 (triangular (dec (% 0))))))

	(let fibonnacci
		(if (or (zero? (% 0))
						(one? (% 0)))
				(% 0)
				(+ (fibonnacci (dec (% 0)))
					 (fibonnacci (- (% 0) 2)))))

	(let pow
		(if (zero? (% 0)
				0
				(if (zero? (% 1))
						1
						(pow (% 0) (dec (% 1)))))))

))
